name: Build & Push to ACR

on:
  push:
    branches: [ main ]

permissions:
  id-token: write    # required for OIDC
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: Azure_crems          # üëà name of your Environment (change if yours is ‚Äúprod‚Äù, ‚Äústaging‚Äù, etc.)

    env:
      IMAGE_NAME: mls_ingestion

    steps:
      - name: Print secret lengths (safe)
        shell: bash
        run: |
          set +euo pipefail
          for k in AZURE_CLIENT_ID AZURE_TENANT_ID AZURE_SUBSCRIPTION_ID; do
            v="${!k}"
            printf '%s length: %d\n' "$k" "${#v}"
          done
          printf 'GITHUB_REF=%s  EVENT=%s  ENV=%s\n' "$GITHUB_REF" "$GITHUB_EVENT_NAME" "$GITHUB_ENVIRONMENT"
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: ACR login
        run: az acr login -n cremslab

      - name: Build & push
        run: |
          IMAGE="${{ secrets.ACR_LOGIN_SERVER }}/mls_ingestion:${{ github.sha }}"
          docker build -t "$IMAGE" .
          docker push "$IMAGE"